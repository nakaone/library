<?xml version="1.0"?>
<opml version="2.0">
  <head>
    <ownerEmail>
      ena.kaon@gmail.com
    </ownerEmail>
  </head>
  <body>
    <outline text="Auth 1.1.0">
      <outline text="概要">
        <outline text="おおまかな流れ" _note="![](doc/summary.svg)&#10;" />
        <outline text="処理要求の流れ" _note="![](doc/query.svg)&#10;" />
        <outline text="新規登録の流れ" _note="![](doc/registration.svg)" />
      </outline>
      <outline text="authClient" _note="classとするとグローバルに呼び出すのが困難になるため、クロージャとする。">
        <outline text="cv - authClientのメンバ(client variables)">
          <outline text="query {authQuery} 処理要求" _note="起動時は引数&quot;query&quot;のコピー、以降は各メソッドにより情報を付加&#10;" />
          <outline text="opt {Object} authClientのオプション設定" _note="起動時引数&quot;&lt;a href=&quot;https://workflowy.com/#/6e19dabbd5cc&quot;&gt;option&lt;/a&gt;&quot;に、引数での未定義項目に既定値を設定した物" />
          <outline text="userId {string} ユーザ識別子" _note="ゲストの場合はundefined" />
          <outline text="email {string} ユーザの連絡先メールアドレス" />
          <outline text="CSkey {Object} クライアント側秘密鍵" />
          <outline text="CPkey {string} クライアント側公開鍵" />
          <outline text="SPkey {string} サーバ側公開鍵" />
        </outline>
        <outline text="主処理(main)">
          <outline text="引数">
            <outline text="query {Object} &lt;a href=&quot;https://workflowy.com/#/accf9448cecc&quot;&gt;authQuery&lt;/a&gt;の内、「■」で示された以下メンバ">
              <outline text="■table {string} 操作対象テーブル名" />
              <outline text="■command {string} 操作名" _note="commandの種類は下表の通り。&#10;&quot;rwdos&quot;とは&quot;Read/Write/Delete/Own/Schema&quot;の頭文字。管理者のみ実行可能な&quot;c&quot;(createTable)と特殊権限&quot;o&quot;を加えてシート毎のアクセス制御を行う。&#10;&#10;内容 | command | rwdos&#10;:-- | :-- | :-- &#10;テーブル生成 | create | c&#10;参照 | select | r&#10;更新 | update | rw&#10;追加 | append/insert | w&#10;テーブル管理情報取得 | schema | s" />
              <outline text="■[where] {Object|Function|string} 対象レコードの判定条件" _note="command='select','update','delete'で使用&#10;&#10;- Object ⇒ {キー項目名:キー項目の値}形式で、key:valueに該当するレコードを更新&#10;- function ⇒ 行オブジェクトを引数に対象ならtrueを返す関数で、trueが返されたレコードを更新&#10;- string&#10;  - 無名関数またはアロー関数のソース文字列 ⇒ new Functionで関数化。{〜} で囲みreturn文を付与。&#10;  - その他 ⇒ 項目定義で&quot;primaryKey&quot;を指定した項目の値&#10;- その他(Object,function,string以外) ⇒ 項目定義で&quot;primaryKey&quot;を指定した項目の値&#10;" />
              <outline text="■[set] {Object|Object[]|string|string[]|Function} 追加・更新する値" _note="command='update','append'で使用&#10;&#10;- Object ⇒ appendなら行オブジェクト、updateなら{更新対象項目名:セットする値}&#10;- string ⇒ 上記Objectに変換可能なJSON文字列&#10;- Function ⇒ 行オブジェクトを引数に、上記Objectを返す関数&#10;  【例】abc欄にfuga+hogeの値をセットする : {func: o=&amp;gt;{return {abc:(o.fuga||0)+(o.hoge||0)}}}&#10;" />
            </outline>
            <outline text="option {Object} &lt;a href=&quot;https://workflowy.com/#/3c211d58f127&quot;&gt;authClient/Server共通オプション&lt;/a&gt;に以下のメンバを加えた物(6e19dabbd5cc)">
              <outline text="saveLocalStorage {Object} localStorageに保存するか否か">
                <outline text="userId {boolean}=true" />
                <outline text="email {boolean}=false" />
              </outline>
              <outline text="crond {&lt;a href=&quot;https://workflowy.com/#/53d27b6201fa&quot;&gt;cron&lt;/a&gt;[]} 起動する定期実行ジョブ" />
              <outline text="1 Backlink">
                <outline text="opt {Object} authClientのオプション設定" _note="起動時引数&quot;&lt;a href=&quot;https://workflowy.com/#/6e19dabbd5cc&quot;&gt;option&lt;/a&gt;&quot;に、引数での未定義項目に既定値を設定した物" />
              </outline>
            </outline>
          </outline>
          <outline text="戻り値 {&lt;a href=&quot;https://workflowy.com/#/accf9448cecc&quot;&gt;authQuery&lt;/a&gt;}" />
        </outline>
        <outline text="dialog() : email/パスコード入力ダイアログの表示・入力" />
        <outline text="request() : authServerに要求を送信" />
        <outline text="createTable() : authServer(SpreadDb.getSchema)の&lt;a href=&quot;https://workflowy.com/#/f76eb797d345&quot;&gt;戻り値&lt;/a&gt;を基にローカルDBにテーブルを作成" />
        <outline text="syncDb() : authServerの更新結果をローカル側DBに反映" />
      </outline>
      <outline text="authServer" _note="単一機能の提供のため、クロージャとする。">
        <outline text="sv - authServerのメンバ(server variables)" _note="server variables">
          <outline text="query {authQuery} 処理要求" _note="起動時は引数&quot;query&quot;のコピー、以降は各メソッドにより情報を付加&#10;" />
          <outline text="opt {Object} authClientのオプション設定" _note="起動時引数&quot;&lt;a href=&quot;https://workflowy.com/#/83ede73058e8&quot;&gt;option&lt;/a&gt;&quot;に、引数での未定義項目に既定値を設定した物" />
          <outline text="SPkey {string} サーバ側公開鍵" />
          <outline text="SSkey {Object} サーバ側秘密鍵" _note="DocumentProperties.SSkeyを`RSAKey.parse(DP.SSkey)`で復元した物&#10;" />
          <outline text="account {Object} accountsシートから抽出したユーザ情報(行オブジェクト)" />
          <outline text="device {Object} devicesシートから抽出したユーザ情報(行オブジェクト)" />
        </outline>
        <outline text="主処理(main)">
          <outline text="引数">
            <outline text="query {Object} &lt;a href=&quot;https://workflowy.com/#/accf9448cecc&quot;&gt;authQuery&lt;/a&gt;の内、「■」または「□」で示された以下メンバ" _note="ユーザ側にCS/SPkeyが有った場合、暗号化＋署名&#10;">
              <outline text="■table {string} 操作対象テーブル名" />
              <outline text="■command {string} 操作名" _note="commandの種類は下表の通り。&#10;&quot;rwdos&quot;とは&quot;Read/Write/Delete/Own/Schema&quot;の頭文字。管理者のみ実行可能な&quot;c&quot;(createTable)と特殊権限&quot;o&quot;を加えてシート毎のアクセス制御を行う。&#10;&#10;内容 | command | rwdos&#10;:-- | :-- | :-- &#10;テーブル生成 | create | c&#10;参照 | select | r&#10;更新 | update | rw&#10;追加 | append/insert | w&#10;テーブル管理情報取得 | schema | s" />
              <outline text="■[where] {Object|Function|string} 対象レコードの判定条件" _note="command='select','update','delete'で使用&#10;&#10;- Object ⇒ {キー項目名:キー項目の値}形式で、key:valueに該当するレコードを更新&#10;- function ⇒ 行オブジェクトを引数に対象ならtrueを返す関数で、trueが返されたレコードを更新&#10;- string&#10;  - 無名関数またはアロー関数のソース文字列 ⇒ new Functionで関数化。{〜} で囲みreturn文を付与。&#10;  - その他 ⇒ 項目定義で&quot;primaryKey&quot;を指定した項目の値&#10;- その他(Object,function,string以外) ⇒ 項目定義で&quot;primaryKey&quot;を指定した項目の値&#10;" />
              <outline text="■[set] {Object|Object[]|string|string[]|Function} 追加・更新する値" _note="command='update','append'で使用&#10;&#10;- Object ⇒ appendなら行オブジェクト、updateなら{更新対象項目名:セットする値}&#10;- string ⇒ 上記Objectに変換可能なJSON文字列&#10;- Function ⇒ 行オブジェクトを引数に、上記Objectを返す関数&#10;  【例】abc欄にfuga+hogeの値をセットする : {func: o=&amp;gt;{return {abc:(o.fuga||0)+(o.hoge||0)}}}&#10;" />
              <outline text="□timestamp {string}=toLocale(new Date()) 更新日時(ISO8601拡張形式)" />
              <outline text="□userId {string|number}=&quot;guest&quot; ユーザ識別子(uuid等)" />
              <outline text="□queryId {string}=UUID クエリ・結果突合用文字列" />
              <outline text="□[email] {string} ユーザのメールアドレス" />
              <outline text="□[CPkey] {string} ユーザの公開鍵" />
              <outline text="□[passcode] {number|string} 入力されたパスコード" _note="開発時はauthClient/authServerへの引数として扱う(∵自動テスト用)。リリース時には引数として与えるのは不可とする&#10;&#10;- authClientへの引数：ダイアログから入力されたパスコードの代替。配列可&#10;- authServerへの引数：乱数で発生させるパスコードの代替&#10;" />
            </outline>
            <outline text="option {Object} &lt;a href=&quot;https://workflowy.com/#/3c211d58f127&quot;&gt;authClient/Server共通オプション&lt;/a&gt;に以下のメンバを加えた物(83ede73058e8)">
              <outline text="DocPropName {string}=&quot;authServer&quot; DocumentPropertiesの項目名" />
              <outline text="sdbOption {&lt;a href=&quot;https://workflowy.com/#/a4a26014ccb3&quot;&gt;sdbOption&lt;/a&gt;} SpreadDbのオプション" />
              <outline text="accountsTableName {string}='accounts' &lt;a href=&quot;https://workflowy.com/#/2f8a77eb6f10&quot;&gt;アカウント管理シート&lt;/a&gt;の名前" />
              <outline text="devicesTableName {string}='devices' &lt;a href=&quot;https://workflowy.com/#/ae550a40dc50&quot;&gt;デバイス管理シート&lt;/a&gt;の名前" />
              <outline text="guestAccount {&lt;a href=&quot;https://workflowy.com/#/2f8a77eb6f10&quot;&gt;accounts&lt;/a&gt;}={} ゲストのアカウント管理設定" _note="既定値はアカウント管理シートの既定値を流用" />
              <outline text="guestDevice {&lt;a href=&quot;https://workflowy.com/#/ae550a40dc50&quot;&gt;devices&lt;/a&gt;}={} ゲストのデバイス管理設定" _note="既定値はデバイス管理シートの既定値を流用" />
              <outline text="newAccount {&lt;a href=&quot;https://workflowy.com/#/2f8a77eb6f10&quot;&gt;accounts&lt;/a&gt;}={} 新規登録者のアカウント管理設定" _note="既定値はアカウント管理シートの既定値を流用" />
              <outline text="newDevice {&lt;a href=&quot;https://workflowy.com/#/ae550a40dc50&quot;&gt;devices&lt;/a&gt;}={} 新規登録者のデバイス管理設定" _note="既定値はデバイス管理シートの既定値を流用" />
              <outline text="validitySpan {number}=1,209,600,000(2週間) アカウントの有効期間" />
              <outline text="1 Backlink">
                <outline text="opt {Object} authClientのオプション設定" _note="起動時引数&quot;&lt;a href=&quot;https://workflowy.com/#/83ede73058e8&quot;&gt;option&lt;/a&gt;&quot;に、引数での未定義項目に既定値を設定した物" />
              </outline>
            </outline>
          </outline>
          <outline text="戻り値 {&lt;a href=&quot;https://workflowy.com/#/accf9448cecc&quot;&gt;authQuery&lt;/a&gt;}" />
        </outline>
        <outline text="registUser() : ユーザ管理情報を生成、シートに追加" />
      </outline>
      <outline text="DocumentProperties" _note="プロパティ名はauthServer.option.DocPropNameで指定&#10;">
        <outline text="SPkey {string} サーバ側公開鍵" />
        <outline text="SSkey {string} サーバ側秘密鍵" _note="復元は`RSAKey.parse(v.r.sKey)`で行う" />
      </outline>
      <outline text="使用シートおよび項目定義">
        <outline text="accounts - アカウント管理シートの項目(2f8a77eb6f10)">
          <outline text="userId {string|number}='guest' ユーザ識別子(primaryKey)" _note="default:101(0〜100はシステム用に留保), primaryKey&#10;" />
          <outline text="note {string}='' アカウント情報(備考)" />
          <outline text="validityStart {string}=Date.now() 有効期間開始日時(ISO8601文字列)" />
          <outline text="validityEnd {string}=validityStart+opt.validitySpan 有効期間終了日時(ISO8601文字列)" />
          <outline text="authority {JSON} シート毎のアクセス権限。&lt;code&gt;{シート名:rwdos文字列}&lt;/code&gt; 形式" _note="既定値はアカウント管理シート・デバイス管理シートの自レコードのみ参照・更新可&#10;" />
          <outline text="created {string}=Date.now() ユーザ登録日時(ISO8601拡張形式)" />
          <outline text="updated {string}=Date.now() 最終更新日時(ISO8601拡張形式)" />
          <outline text="deleted {string}='' 論理削除日時" />
          <outline text="3 Backlinks">
            <outline text="newAccount {&lt;a href=&quot;https://workflowy.com/#/2f8a77eb6f10&quot;&gt;accounts&lt;/a&gt;}={} 新規登録者のアカウント管理設定" _note="既定値はアカウント管理シートの既定値を流用" />
            <outline text="guestAccount {&lt;a href=&quot;https://workflowy.com/#/2f8a77eb6f10&quot;&gt;accounts&lt;/a&gt;}={} ゲストのアカウント管理設定" _note="既定値はアカウント管理シートの既定値を流用" />
            <outline text="accountsTableName {string}='accounts' &lt;a href=&quot;https://workflowy.com/#/2f8a77eb6f10&quot;&gt;アカウント管理シート&lt;/a&gt;の名前" />
          </outline>
        </outline>
        <outline text="devices - デバイス管理シートの項目(ae550a40dc50)" _note="複数デバイスでの単一アカウントの使用を可能にするため「account.userId(1) : device.userId(n)」で作成&#10;">
          <outline text="userId {string|number}='guest' ユーザ識別子" _note="not null" />
          <outline text="email {string}=opt.adminMail ユーザのメールアドレス(unique)" _note="primaryKey&#10;" />
          <outline text="name {string}='ゲスト' ユーザの氏名" />
          <outline text="phone {string}=''ユーザの電話番号" />
          <outline text="address {string}='' ユーザの住所" />
          <outline text="note {string}='' ユーザ情報(備考)" />
          <outline text="CPkey {string}='' クライアント側公開鍵" />
          <outline text="CPkeyExpiry {string}='' CPkey有効期限" _note="期限内に適切な暗号化・署名された要求はOKとする&#10;" />
          <outline text="created {string}=Date.now() ユーザ登録日時(ISO8601拡張形式)" />
          <outline text="updated {string}=Date.now() 最終更新日時(ISO8601拡張形式)" />
          <outline text="deleted {string}='' 論理削除日時" />
          <outline text="3 Backlinks">
            <outline text="newDevice {&lt;a href=&quot;https://workflowy.com/#/ae550a40dc50&quot;&gt;devices&lt;/a&gt;}={} 新規登録者のデバイス管理設定" _note="既定値はデバイス管理シートの既定値を流用" />
            <outline text="guestDevice {&lt;a href=&quot;https://workflowy.com/#/ae550a40dc50&quot;&gt;devices&lt;/a&gt;}={} ゲストのデバイス管理設定" _note="既定値はデバイス管理シートの既定値を流用" />
            <outline text="devicesTableName {string}='devices' &lt;a href=&quot;https://workflowy.com/#/ae550a40dc50&quot;&gt;デバイス管理シート&lt;/a&gt;の名前" />
          </outline>
        </outline>
        <outline text="log - SpreadDbのアクセスログシート" _note="詳細はSpreadDb.&lt;a href=&quot;https://workflowy.com/#/dab8cfcec9d8&quot;&gt;sdbLog&lt;/a&gt;参照" />
      </outline>
      <outline text="typedefs">
        <outline text="authQuery {Object[]} 操作要求の内容(accf9448cecc)" _note="- ■：authClientへの引数、□：authServerへの引数(authClientでの追加項目)、〇：authServerでの追加項目&#10;- SpreadDbの&lt;a href=&quot;https://workflowy.com/#/1e80990a7c63&quot;&gt;sdbQuery&lt;/a&gt;からの差分項目&#10;  - 削除項目：cols, arg&#10;  - 追加項目：email, CPkey, passcode, SPkey, status&#10;- command=&quot;delete&quot;(物理削除)は使用不可とし、論理削除で対応&amp;lt;br&amp;gt;(万一のハッキング時のリスク軽減)&#10;">
          <outline text="■table {string} 操作対象テーブル名" />
          <outline text="■command {string} 操作名" _note="commandの種類は下表の通り。&#10;&quot;rwdos&quot;とは&quot;Read/Write/Delete/Own/Schema&quot;の頭文字。管理者のみ実行可能な&quot;c&quot;(createTable)と特殊権限&quot;o&quot;を加えてシート毎のアクセス制御を行う。&#10;&#10;内容 | command | rwdos&#10;:-- | :-- | :-- &#10;テーブル生成 | create | c&#10;参照 | select | r&#10;更新 | update | rw&#10;追加 | append/insert | w&#10;テーブル管理情報取得 | schema | s" />
          <outline text="■[where] {Object|Function|string} 対象レコードの判定条件" _note="command='select','update','delete'で使用&#10;&#10;- Object ⇒ {キー項目名:キー項目の値}形式で、key:valueに該当するレコードを更新&#10;- function ⇒ 行オブジェクトを引数に対象ならtrueを返す関数で、trueが返されたレコードを更新&#10;- string&#10;  - 無名関数またはアロー関数のソース文字列 ⇒ new Functionで関数化。{〜} で囲みreturn文を付与。&#10;  - その他 ⇒ 項目定義で&quot;primaryKey&quot;を指定した項目の値&#10;- その他(Object,function,string以外) ⇒ 項目定義で&quot;primaryKey&quot;を指定した項目の値&#10;" />
          <outline text="■[set] {Object|Object[]|string|string[]|Function} 追加・更新する値" _note="command='update','append'で使用&#10;&#10;- Object ⇒ appendなら行オブジェクト、updateなら{更新対象項目名:セットする値}&#10;- string ⇒ 上記Objectに変換可能なJSON文字列&#10;- Function ⇒ 行オブジェクトを引数に、上記Objectを返す関数&#10;  【例】abc欄にfuga+hogeの値をセットする : {func: o=&amp;gt;{return {abc:(o.fuga||0)+(o.hoge||0)}}}&#10;" />
          <outline text="□timestamp {string}=toLocale(new Date()) 更新日時(ISO8601拡張形式)" />
          <outline text="□userId {string|number}=&quot;guest&quot; ユーザ識別子(uuid等)" />
          <outline text="□queryId {string}=UUID クエリ・結果突合用文字列" />
          <outline text="□[email] {string} ユーザのメールアドレス" />
          <outline text="□[CPkey] {string} ユーザの公開鍵" />
          <outline text="□[passcode] {number|string} 入力されたパスコード" _note="開発時はauthClient/authServerへの引数として扱う(∵自動テスト用)。リリース時には引数として与えるのは不可とする&#10;&#10;- authClientへの引数：ダイアログから入力されたパスコードの代替。配列可&#10;- authServerへの引数：乱数で発生させるパスコードの代替&#10;" />
          <outline text="〇SPkey {string} サーバ側公開鍵" />
          <outline text="〇qSts {string} クエリ単位の実行結果" _note="正常終了なら&quot;OK&quot;。エラーコードは以下の通り。&#10;- create : &quot;Already Exist&quot;, &quot;No Cols and Data&quot;&#10;- その他 : &quot;No Table&quot;" />
          <outline text="〇num {number} 変更された行数" _note="append:追加行数、update:変更行数、select:抽出行数、schema:0(固定)&#10;" />
          <outline text="〇result {&lt;a href=&quot;https://workflowy.com/#/d2f620e47c51&quot;&gt;sdbResult&lt;/a&gt;[]} レコード単位の実行結果" />
          <outline text="〇status {string} authServerの実行結果" _note="必要に応じてauthClientで追加変更" />
          <outline text="4 Backlinks">
            <outline text="query {Object} &lt;a href=&quot;https://workflowy.com/#/accf9448cecc&quot;&gt;authQuery&lt;/a&gt;の内、「■」または「□」で示された以下メンバ" _note="ユーザ側にCS/SPkeyが有った場合、暗号化＋署名&#10;" />
            <outline text="戻り値 {&lt;a href=&quot;https://workflowy.com/#/accf9448cecc&quot;&gt;authQuery&lt;/a&gt;}" />
            <outline text="query {Object} &lt;a href=&quot;https://workflowy.com/#/accf9448cecc&quot;&gt;authQuery&lt;/a&gt;の内、「■」で示された以下メンバ" />
            <outline text="戻り値 {&lt;a href=&quot;https://workflowy.com/#/accf9448cecc&quot;&gt;authQuery&lt;/a&gt;}" />
          </outline>
        </outline>
        <outline text="authTrial {Object} ログイン試行関連情報">
          <outline text="passcode {number} 設定されたパスコード" />
          <outline text="datetime {string} パスコード通知メール送信日時" _note="パスコード要求(client)&amp;gt;要求受領(server)&amp;gt;パスコード生成&amp;gt;通知メール送信の内、メール送信日時&#10;" />
          <outline text="log {Object[]} 試行履歴情報">
            <outline text="dt {string} パスコード検証日時(Date Time)" />
            <outline text="pc {number} ユーザが入力したパスコード(PassCode)" />
            <outline text="st {number} ステータス(STatus)" />
          </outline>
          <outline text="thawing {string}='1970/01/01' 凍結解除日時" />
        </outline>
        <outline text="commonOption {Object} authClient/authServer共通オプション(3c211d58f127)" _note="以下は共通性維持のため、authClient/authServer起動時オプションでの変更は不可とする。&amp;lt;br&amp;gt;変更が必要な場合、build前のソースで変更する。">
          <outline text="tokenExpiry {number}=600,000(10分) トークンの有効期間(ミリ秒)" />
          <outline text="passcodeDigit {number}=6  パスコードの桁数" />
          <outline text="passcodeExpiry {number}=600,000(10分) パスコードの有効期間(ミリ秒)" _note="メール送信〜受領〜パスコード入力〜送信〜確認処理終了までの時間。通信に係る時間も含む。不正防止のため、始点/終点ともサーバ側で時刻を設定する。" />
          <outline text="maxTrial {number}=3 パスコード入力の最大試行回数" />
          <outline text="validityExpiry {number}=86,400,000(1日) ログイン有効期間(ミリ秒)" _note="有効期間を超えた場合は再ログインを必要とする" />
          <outline text="maxDevices {number}=5 単一アカウントで使用可能なデバイスの最大数" />
          <outline text="freezing {number}=3600000 連続失敗した場合の凍結期間。ミリ秒。既定値1時間" />
          <outline text="bits {number}=2048 RSA鍵ペアの鍵長" />
          <outline text="adminMail {string} 管理者のメールアドレス" />
          <outline text="adminName {string} 管理者名" />
          <outline text="2 Backlinks">
            <outline text="option {Object} &lt;a href=&quot;https://workflowy.com/#/3c211d58f127&quot;&gt;authClient/Server共通オプション&lt;/a&gt;に以下のメンバを加えた物(6e19dabbd5cc)" />
            <outline text="option {Object} &lt;a href=&quot;https://workflowy.com/#/3c211d58f127&quot;&gt;authClient/Server共通オプション&lt;/a&gt;に以下のメンバを加えた物(83ede73058e8)" />
          </outline>
        </outline>
        <outline text="cron {Object} 定期実行ジョブの引数(53d27b6201fa)" _note="crond.set(), crond.clear()共通&#10;">
          <outline text="name {string} ジョブを特定する名称" />
          <outline text="func {function} ジョブ本体" />
          <outline text="interval {number} 実行間隔(ミリ秒)" />
          <outline text="1 Backlink">
            <outline text="crond {&lt;a href=&quot;https://workflowy.com/#/53d27b6201fa&quot;&gt;cron&lt;/a&gt;[]} 起動する定期実行ジョブ" />
          </outline>
        </outline>
      </outline>
      <outline text="その他" _note="用語解説、注意事項、更新履歴、他">
        <outline text="【参考】SpreadDbのエラーコード" _note="| No | 設定項目 | コード | 発生箇所 | 原因 |&#10;| --: | :-- | :-- | :-- | :-- |&#10;| 1 | qSts | No Authority | doQuery | 指定されたテーブル操作の権限が無い |&#10;| 2 | qSts | No command | doQuery | query.commandが無い、または文字列では無い |&#10;| 3 | qSts | No Table name | doQuery | query.tableが無い、または文字列では無い |&#10;| 4 | qSts | Invalid where clause | doQuery | (権限&quot;o&quot;で)where句の値がプリミティブ型ではない |&#10;| 5 | qSts | No Table | doQuery&amp;lt;br&amp;gt;genTable | (create以外で)対象テーブルが無い |&#10;| 6 | qSts | No cols and data | genTable | createで項目定義も初期データも無い |&#10;| 7 | qSts | Already Exist | createTable | シートが既に存在している |&#10;| 8 | qSts | Duplicate | createTable | 初期レコード内に重複が存在 |&#10;| 9 | qSts | Empty set | createTable&amp;lt;br&amp;gt;appendRow | query.setが不在、または配列の長さが0 |&#10;| 10 | qSts | Invalid set | appendRow | query.setが非配列なのに要素がオブジェクトではない |&#10;| 11 | qSts | No set | appendRow&amp;lt;br&amp;gt;updateRow | queryにメンバ&quot;set&quot;が不在 |&#10;| 12 | qSts | No where | deleteRow&amp;lt;br&amp;gt;updateRow | where句がqueryに無い |&#10;| 13 | qSts | Undefined Column | updateRow | 更新対象項目がテーブルに無い |&#10;| 14 | qSts | その他 | doQuery | エラーオブジェクトのmessage |&#10;| 15 | rSts | Duplicate | appendRow&amp;lt;br&amp;gt;updateRow | unique項目に重複した値を入れようとした |&#10;| 16 | Error | Invalid Argument | functionalyze | 不適切な引数 |&#10;| 17 | Error | Could not Lock | main | 規定回数以上シートのロックに失敗した |" />
        <outline text="更新履歴" />
      </outline>
    </outline>
  </body>
</opml>
